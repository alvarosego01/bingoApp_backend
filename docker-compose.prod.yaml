# version: '3'

# services:
#   pokedexapp:
#     depends_on:
#       - db
#     build:
#       context: .
#       dockerfile: Dockerfile
#     image: pokedex-docker
#     container_name: pokedexapp
#     restart: always # reiniciar el contenedor si se detiene
#     ports:
#       - "${PORT}:${PORT}"
#     # working_dir: /var/www/pokedex
#     environment:
#       MONGODB: ${MONGODB}
#       PORT: ${PORT}
#       DEFAULT_LIMIT: ${DEFAULT_LIMIT}
#     # volumes:
#     #   - ./:/var/www/pokedex

#   db:
#     image: mongo:5
#     container_name: mongo-poke
#     restart: always
#     ports:
#       - 27017:27017
#     environment:
#       MONGODB_DATABASE: nest-pokemon
#     volumes:
#       - ./mongo:/data/db


version: '3'

services:
  bp_backend_app:
    depends_on:
      - db_bp_backend
    build:
      context: .
      dockerfile: Dockerfile
    image: bp_backend_docker
    container_name: bp_backend_app
    restart: always # reiniciar el contenedor si se detiene
    ports:
      - "${PORT}:${PORT}"
    # working_dir: /var/www/pokedex
    environment:
      MONGODB: ${MONGODB}
      PORT: ${PORT}
      DEFAULT_LIMIT: ${DEFAULT_LIMIT}
      JWT_SECRET: ${JWT_SECRET}
      LOG_LEVEL: ${LOG_LEVEL}
      ENVIROMENT: ${ENVIROMENT}
      ALLOWEDORIGINS: ${ALLOWEDORIGINS}
      EMAILTEST: ${EMAILTEST}
      EMAILINFO: ${EMAILINFO}
    # volumes:
    #   - ./:/var/www/pokedex
  db_bp_backend:
    image: mongo:6.0.4
    container_name: mongo-bp
    restart: always
    ports:
      - 37017:27017
    environment:
      MONGODB_DATABASE: bp_backend
    volumes:
      - ./mongo:/data/db